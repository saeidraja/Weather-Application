name: CI/CD Pipeline - Build, Push, and Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Tag
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: app/src
          file: app/src/Dockerfile
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: ${{ secrets.DOCKER_USERNAME }}/weather-app:${{ env.SHORT_SHA }}

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Compute short SHA for deployment
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          envs: SHORT_SHA
          script: |
            set -euo pipefail
            cd /var/services/weather/app
            if grep -q '^IMAGE_TAG=' .env; then
              sed -i "s/^IMAGE_TAG=.*/IMAGE_TAG=${SHORT_SHA}/" .env
            else
              echo "IMAGE_TAG=${SHORT_SHA}" >> .env
            fi
            docker compose -f compose.yml pull
            docker compose -f compose.yml up -d --remove-orphans 
            docker image prune -f

